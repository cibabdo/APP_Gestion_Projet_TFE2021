{% extends 'base.html.twig' %}

{% block navbar %}
    {% include 'navbar.html.twig' %}
{% endblock %}

{% block content %}

<div class="row mt-5">
    <div class="col">
        {{ form_start(form, {'attr' : {'autocomplete' : 'off'}}) }}
        <h2 class="text-center">Projet {{name}}</h2> 

        <div class="mb-3">
            {{ form_label(form.company, 'Entreprise', {'label_attr': { class: 'form-label' }}) }}
            {% if form_errors(form.company) %}            
                <div class="form-error text-danger">
                    <span class="span_error bg-danger text-white">ERREUR</span>&nbsp;{{ form_errors(form.company) }}
                </div>            
            {% endif %}
            {{ form_widget(form.company, {'attr': {'class': 'form-control'}}) }}    
        </div>

        <div class="mb-3">
            {{ form_label(form.work, 'Poste', {'label_attr': { class: 'form-label' }}) }}
            {% if form_errors(form.work) %}            
                <div class="form-error text-danger">
                    <span class="span_error bg-danger text-white">ERREUR</span>&nbsp;{{ form_errors(form.work) }}
                </div>            
            {% endif %}
            {{ form_widget(form.work, {'attr': {'class': 'form-control'}}) }}    
        </div>
        
        <div class="mb-3">
            {{ form_label(form.comment, 'Commentaire', {'label_attr': { class: 'form-label' }}) }}
            {% if form_errors(form.comment) %}            
                <div class="form-error text-danger">
                    <span class="span_error bg-danger text-white">ERREUR</span>&nbsp;{{ form_errors(form.comment) }}
                </div>            
            {% endif %}
            {{ form_widget(form.comment, {'attr': {'class': 'form-control'}}) }}    
        </div>

        <div class="mb-3">
            <label class="form-label">Documents</label>
            {% if documents|length > 0 %}
                {% for document in documents %}       
                    <div class="card m-2" style="width: 18rem;">
                        <div class="card-img-top"></div>
                        <div class="card-body">
                            <h5 class="card-title"><i class="bi bi-file-earmark"></i> {{document.filename}}</h5>
                            <p class="card-text">{{document.comment}}</p>
                            <a href="{{path('document_view',{id:projectId, documentId:document.id})}}" class="btn btn-primary btn-sm view">Voir</a>
                            {% if is_granted('ROLE_EXTERNAL') == false %}
                                <a href="{{path('document_delete',{id:projectId, documentId:document.id})}}" class="btn btn-danger btn-sm delete">Supprimer</a>
                            {% endif %}
                        </div>
                    </div>
                {% endfor %}    
            {% else %}
                <p><i>Pas de documents...</i></p>
            {% endif %}
        </div>

        <div class="mb-3">
            <!--<div>{{ form_label(form.documents, 'Uploader des documents', {'label_attr': { class: 'form-label' }}) }}</div>-->
            {% if form_errors(form.documents) %}            
                <div class="form-error text-danger">
                    <span class="span_error bg-danger text-white">ERREUR</span>&nbsp;{{ form_errors(form.documents) }}
                </div>            
            {% endif %}
            {{ form_widget(form.documents, {'attr': {'class': 'form-control-file'}}) }}    
        </div>

        <div class="mb-3">
            {{ form_label(form.provisionalReceptionDate, 'Date réception provisoire', {'label_attr': { class: 'form-label' }}) }}
            {% if form_errors(form.provisionalReceptionDate) %}            
                <div class="form-error text-danger">
                    <span class="span_error bg-danger text-white">ERREUR</span>&nbsp;{{ form_errors(form.provisionalReceptionDate) }}
                </div>            
            {% endif %}
            {{ form_widget(form.provisionalReceptionDate, {'attr': {'class': 'form-control'}}) }}    
        </div>

        <div class="mb-3">
            {{ form_label(form.finalDeliveryDate, 'Date réception définitive', {'label_attr': { class: 'form-label' }}) }}
            {% if form_errors(form.finalDeliveryDate) %}            
                <div class="form-error text-danger">
                    <span class="span_error bg-danger text-white">ERREUR</span>&nbsp;{{ form_errors(form.finalDeliveryDate) }}
                </div>            
            {% endif %}
            {{ form_widget(form.finalDeliveryDate, {'attr': {'class': 'form-control'}}) }}    
        </div>

        <div class="mb-3">
            {{ form_label(form.vincotteReceptionDate, 'Date réception vinçotte', {'label_attr': { class: 'form-label' }}) }}
            {% if form_errors(form.vincotteReceptionDate) %}            
                <div class="form-error text-danger">
                    <span class="span_error bg-danger text-white">ERREUR</span>&nbsp;{{ form_errors(form.vincotteReceptionDate) }}
                </div>            
            {% endif %}
            {{ form_widget(form.vincotteReceptionDate, {'attr': {'class': 'form-control'}}) }}    
        </div>

        <div class="my-2">
            {% if is_granted('ROLE_EXTERNAL') == false %}
                <button type="submit" class="btn btn-primary">Ok</button>     
                {% if form.vars.value.id %}           
                    <a href="#" class="btn btn-danger ml-3" onClick="deleteProject()">Supprimer</a>                   
                {% endif %}
            {% endif %}
            <a href="{{path('project_edit',{id:projectId,onglet:'work'})}}" class="btn btn-secondary ml-3">Retour</a>                
        </div>      
                  
        {{ form_end(form) }}
    </div>    
</div>
<script>
    document.getElementById("project_work_comment").focus()  
    
    $('label.required').append('<span class="stars_required">*</span>')

    const div_error = '<div class="form-error form-error-small text-danger inline $input$"><span class="span_error bg-danger text-white">ERREUR</span>&nbsp;$error$</div>';

    const project_work_company_server = $('#project_work_company').val();
    const project_work_work_server = $('#project_work_work').val();

    $('input, select').on('change', function(ev) {
        let error, errors

        // id et valeur
        const id = $(this).attr('id');
        const val = $(this).val();

        /*
        console.log('id', id);
        console.log('val', val);        
        */
    
        // initialisation, retirer l'erreur éventuelle sur la zone dont on modifie la valeur
        $('.'+id).remove()    

        // retirer l'erreur éventuelle rendue par le serveur (entity) lors d'un submit
        let element_html = $('label[for="' + id + '"]').next();        
        if (element_html.hasClass('form-error')) element_html.remove(); 

        if (id == 'project_work_company') {            
            $('.project_work_work').remove();
            element_html = $('label[for="project_work_work"]').next();        
            if (element_html.hasClass('form-error')) element_html.remove(); 
        }

        // traitement
        switch(id) {
            case 'project_work_company' :
                if (val.trim() == '') return // si champ vide, stop, ne pas aller jusqu'au serveur
                if ($(this).val() == project_work_company_server) return;
                validForm('project_work_work', 'work');       
                break
            case 'project_work_work' :
                if (val.trim() == '') return // si champ vide, stop, ne pas aller jusqu'au serveur
                if ($(this).val() == project_work_work_server) return;
                validForm(id, 'work');
                break
                case 'project_work_provisionalReceptionDate' : 
                if (val.trim() == '') return // si champ vide, stop, ne pas aller jusqu'au serveur
                error = validDate(val);
                if (error == '') error = validDates1(val, $('#project_work_finalDeliveryDate').val());
                if (error != '') {
                    $('label[for="' + id+ '"]').append(div_error.replace('$input$',id).replace('$error$', error))
                }                
                break
            case 'project_work_finalDeliveryDate' : 
                if (val.trim() == '') return // si champ vide, stop, ne pas aller jusqu'au serveur
                error = validDate(val);
                if (error == '') error = validDates1($('#project_work_provisionalReceptionDate').val(), val);
                if (error != '') {
                    $('label[for="' + id+ '"]').append(div_error.replace('$input$',id).replace('$error$', error))
                }                
                break
            case 'project_work_vincotteReceptionDate' : 
                if (val.trim() == '') return // si champ vide, stop, ne pas aller jusqu'au serveur
                error = validDate(val);
                if (error == '') error = validDates2($('#project_work_finalDeliveryDate').val(), val);
                if (error != '') {
                    $('label[for="' + id+ '"]').append(div_error.replace('$input$',id).replace('$error$', error))
                }            
        }
    });

    function verifyError(errors, input, callback) {
        if (errors.errors.violations) {
            errors.errors.violations.forEach(function(obj) {
                if (obj['propertyPath'] == input) {
                    callback(obj['title']);
                    return ;
                } 
            })        
        }
    }

    function validForm(id, data) {        
        let url = '{{path("work_valid_form", {projectId:projectId, workId:workId})}}';        
        $.ajax({
            url: url,
            async: true,
            data: $('form').serialize(),    // jquery construit le body pour la requête post
            type: 'POST',
            dataType: 'json',
            success: function (errors) { 
                //console.log(errors)                   
                verifyError(errors, data, function(error) {
                    $('label[for="' + id + '"]').append(div_error.replace('$input$', id).replace('$error$', error))
                });   
                return
            },
            error: function(jqXHR, textStatus, errorThrown ) {
                console.log(jqXHR, textStatus, errorThrown)
                alert('Erreur lors de la suppression')                    
            }
        })       
    }

    function validDate(date) {       
        date = parseInt(date.replaceAll('-',''));
        if (isNaN(date)) return 'La date n\'est pas valide';
        return '';
    }

    function validDates1(date1, date2) {        
        date1 = parseInt(date1.replaceAll('-',''));
        date2 = parseInt(date2.replaceAll('-',''));                        
        if (date2 <= date1) return 'La date doit être postérieure à la date provisoire';
        return '';
    }

    function validDates2(date1, date2) {        
        date1 = parseInt(date1.replaceAll('-',''));
        date2 = parseInt(date2.replaceAll('-',''));                        
        if (date2 <= date1) return 'La date doit être postérieure à la date définitive';
        return '';
    }

    function deleteProject() {
        if (confirm('Confirmer la suppression ?')) {                    
            $.ajax({
                url: '{{path("project_works_delete",{projectId:projectId, workId:workId})}}',
                type: 'DELETE',
                dataType: 'text',
                success: function (result) {                    
                    document.location.href = '{{path("project_edit",{id:projectId, onglet:"work"})}}?message=Poste supprimé'
                },
                error: function(jqXHR, textStatus, errorThrown ) {
                    console.log(jqXHR, textStatus, errorThrown)
                    alert('Erreur lors de la suppression')                    
                }
            })            
        }        
    }  

    $('.view').on('click', function() {
        window.open($(this).attr('href'));
        return false;
    })

    $('.delete').on('click', function() {
        const url = $(this).attr('href');
        const $obj = $(this);
        if (confirm('Confirmer la suppression ?')) {                    
            $.ajax({
                url: url,
                type: 'DELETE',
                dataType: 'text',
                success: function (result) {                           
                    $obj.parent().parent().remove();
                },
                error: function(jqXHR, textStatus, errorThrown ) {
                    console.log(jqXHR, textStatus, errorThrown)
                    alert('Erreur lors de la suppression')                    
                }
            })            
        }  
        return false;
    })

    $('form').on('submit', function() {
        
        let error;   

        $('.form-error ').remove();        

        // valider date
        if ($('#project_work_provisionalReceptionDate').val() != '') {
            error = validDate($('#project_work_provisionalReceptionDate').val());
            if (error != '') {
                $('#project_work_provisionalReceptionDate').focus();            
                $('label[for="project_work_provisionalReceptionDate"]').append(div_error.replace('$input$', 'project_work_provisionalReceptionDate').replace('$error$', error))
                return false;
            }
        }
       
        // valider date
        if ($('#project_work_finalDeliveryDate').val() != '') {
            error = validDate($('#project_work_finalDeliveryDate').val());
            if (error != '') {
                $('#project_work_finalDeliveryDate').focus();
                $('label[for="project_work_finalDeliveryDate"]').append(div_error.replace('$input$', 'project_work_finalDeliveryDate').replace('$error$', error))
                return false;
            }   
        }

         // valider date
        if ($('#project_work_vincotteReceptionDate').val() != '') {
            error = validDate($('#project_work_vincotteReceptionDate').val());
            if (error != '') {
                $('#project_work_vincotteReceptionDate').focus();
                $('label[for="project_work_vincotteReceptionDate"]').append(div_error.replace('$input$', 'project_work_vincotteReceptionDate').replace('$error$', error))
                return false;
            }
        }
       
        // valider cohérence dates
        if ($('#project_work_provisionalReceptionDate').val() != '' && $('#project_work_finalDeliveryDate').val() != '') {
            error = validDates1($('#project_work_provisionalReceptionDate').val(), $('#project_work_finalDeliveryDate').val());
            if (error != '') {
                $('#project_work_finalDeliveryDate').focus();
                $('label[for="project_work_finalDeliveryDate"]').append(div_error.replace('$input$', 'project_work_finalDeliveryDate').replace('$error$', error))
                return false;
            }
        }

        // valider cohérence dates
        if ($('#project_work_finalDeliveryDate').val() != '' && $('#project_work_vincotteReceptionDate').val() != '') {
            error = validDates2($('#project_work_finalDeliveryDate').val(), $('#project_work_vincotteReceptionDate').val());
            if (error != '') {
                $('#project_work_vincotteReceptionDate').focus();
                $('label[for="project_work_vincotteReceptionDate"]').append(div_error.replace('$input$', 'project_work_vincotteReceptionDate').replace('$error$', error))
                return false;
            }
        }
        
        return true;
    });
</script>
{% endblock %}
